/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  FlipPeriphery,
  FlipPeripheryInterface,
} from "../../../src/periphery/FlipPeriphery";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "flipContract",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "buyer",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    name: "Bought",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "flipContract",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "buyer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "tokenIds",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "totalPrice",
        type: "uint256",
      },
    ],
    name: "BulkBuyExecuted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "flipContract",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "buyer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "quantity",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "totalPrice",
        type: "uint256",
      },
    ],
    name: "BulkMintExecuted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "flipContract",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "buyer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "quantity",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "totalPrice",
        type: "uint256",
      },
    ],
    name: "BulkQuickBuyExecuted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "flipContract",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "seller",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "tokenIds",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "totalPrice",
        type: "uint256",
      },
    ],
    name: "BulkSellExecuted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "flipContract",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    name: "Minted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "flipContract",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "buyer",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    name: "QuickBuyExecuted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "flipContract",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "seller",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    name: "Sold",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_flipContractAddress",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "tokenIds",
        type: "uint256[]",
      },
    ],
    name: "bulkBuy",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_flipContractAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "quantity",
        type: "uint256",
      },
    ],
    name: "bulkMint",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_flipContractAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "quantity",
        type: "uint256",
      },
    ],
    name: "bulkQuickBuy",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_flipContractAddress",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "tokenIds",
        type: "uint256[]",
      },
    ],
    name: "bulkSell",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_flipContractAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "buy",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_flipContractAddress",
        type: "address",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC721Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_flipContractAddress",
        type: "address",
      },
    ],
    name: "quickBuy",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_flipContractAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "sell",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x6080604052346019576040516116fa61001f82396116fa90f35b600080fdfe6080604052600436101561001b575b361561001957600080fd5b005b60003560e01c8063150b7a02146100ab57806340f3620a146100a65780636a627842146100a15780636c197ff51461009c57806399bd4737146100975780639cb3ecd014610092578063a8c90cb21461008d578063cce7ec13146100885763d17dbbc00361000e57610389565b610375565b610361565b61034d565b610339565b610320565b6102ea565b6102b8565b610210565b6001600160a01b031690565b90565b6001600160a01b0381165b036100d157565b600080fd5b905035906100e3826100bf565b565b806100ca565b905035906100e3826100e5565b634e487b7160e01b600052604160045260246000fd5b90601f01601f1916810190811067ffffffffffffffff82111761013057604052565b6100f8565b906100e361014260405190565b928361010e565b67ffffffffffffffff811161013057602090601f01601f19160190565b0190565b90826000939282370152565b9092919261018b61018682610149565b610135565b93818552818301116100d1576100e391602085019061016a565b9080601f830112156100d1578160206100bc93359101610176565b906080828203126100d1576101d581836100d6565b926101e382602085016100d6565b926101f183604083016100eb565b92606082013567ffffffffffffffff81116100d1576100bc92016101a5565b346100d15761024a61022f6102263660046101c0565b929190916103df565b604051918291826001600160e01b0319909116815260200190565b0390f35b909182601f830112156100d15781359167ffffffffffffffff83116100d15760200192602083028401116100d157565b9190916040818403126100d15761029583826100d6565b92602082013567ffffffffffffffff81116100d1576102b4920161024e565b9091565b346100d1576102d16102cb36600461027e565b916105e6565b604051005b906020828203126100d1576100bc916100d6565b6102d16102f83660046102d6565b610878565b91906040838203126100d1576100bc90602061031982866100d6565b94016100eb565b346100d1576102d16103333660046102fd565b90610a0d565b6102d161034736600461027e565b91610bfb565b6102d161035b3660046102fd565b90610e7b565b6102d161036f3660046102fd565b90611117565b6102d16103833660046102fd565b9061129a565b6102d16103973660046102d6565b61141b565b6100bc906100b0906001600160a01b031682565b6100bc9061039c565b6103d26103cc6100bc9263ffffffff1690565b60e01b90565b6001600160e01b03191690565b505050506103eb600090565b506100bc63150b7a026103b9565b6100bc906103b0565b6100bc6100bc6100bc9290565b634e487b7160e01b600052603260045260246000fd5b9190811015610435576020020190565b61040f565b356100bc816100e5565b905051906100e3826100bf565b906020828203126100d1576100bc91610444565b6040513d6000823e3d90fd5b1561047857565b60405162461bcd60e51b815260206004820152600f60248201526e2737ba103a37b5b2b71037bbb732b960891b6044820152606490fd5b905051906100e3826100e5565b906020828203126100d1576100bc916104af565b634e487b7160e01b600052601160045260246000fd5b919082018092116104f357565b6104d0565b60009103126100d157565b6001600160a01b039182168152911660208201526060810192916100e39160400152565b9037565b8183529091602001916001600160fb1b0381116100d157829160206101669202938491610527565b9392906105726020916100e394604088019188830360008a015261052b565b940152565b9061058461018683610149565b918252565b3d156105a3576105983d610577565b903d6000602084013e565b606090565b156105af57565b60405162461bcd60e51b815260206004820152600f60248201526e151c985b9cd9995c8819985a5b1959608a1b6044820152606490fd5b919290926105f3836103f9565b916105fd846103f9565b9160009561060a87610402565b92835b8381101561080857610628610623828686610425565b61043a565b90610632886103f9565b9561063c60405190565b6331a9108f60e11b8152600481018490526020816024818b5afa801561078957610679916000916107da575b506001600160a01b03163314610471565b610682886103f9565b90602061068e60405190565b630868706160e21b815292839060049082905afa908115610789576106bb926000926107aa575b506104e6565b956106c5306103f9565b813b156100d1578b846106f4926106db60405190565b93849283926323b872dd60e01b84523360048501610503565b038183865af180156107895761078e575b50803b156100d15761073d8b9391849261071e60405190565b95869384928391906372424d9960e11b5b835260048301526024820190565b03925af1918215610789576107589261075d575b5060010190565b61060d565b61077c908b3d8d11610782575b610774818361010e565b8101906104f8565b38610751565b503d61076a565b610465565b6107a4908c8d3d1061078257610774818361010e565b38610705565b6107cc91925060203d81116107d3575b6107c4818361010e565b8101906104bc565b90386106b5565b503d6107ba565b6107fb915060203d8111610801575b6107f3818361010e565b810190610451565b38610668565b503d6107e9565b50969450908493507f4f275847fc1f4b73e82a70cbabfa9e4be6ff26e9f255681c79da8d9e497d351f61083d6100e3976103f9565b91610847336103f9565b9361085e8661085560405190565b93849384610553565b0390a3604051600091335af1610872610589565b506105a8565b610881816103f9565b9061089361088e826103f9565b6103f9565b91602061089f60405190565b6304a8fe6560e41b815293849060049082905afa928315610789576000936109e8575b506108cc906103f9565b631249c58b916108e56108de60405190565b9360e01b90565b835260208360048134865af1928315610789576000936109c7575b5061090a306103f9565b91803b156100d15783600091610945948361092460405190565b8097819582946109386323b872dd60e01b90565b8452339060048501610503565b03925af19182156107895761095f926109b1575b506103f9565b7f03f17d66ad3bf18e9412eb06582908831508cdb9b8da9cddb1431f645a5b86326109ac61099561098f336103f9565b94610402565b9461099f60405190565b9182918290815260200190565b0390a4565b6109c1906000610774818361010e565b38610959565b6109e191935060203d6020116107d3576107c4818361010e565b9138610900565b6108cc919350610a069060203d6020116107d3576107c4818361010e565b92906108c2565b90610a17826103f9565b91610a2461088e826103f9565b926020610a3060405190565b630868706160e21b815294859060049082905afa93841561078957600094610b4a575b50610a5d906103f9565b90610a67306103f9565b823b156100d157600084610a7e926106db60405190565b038183875af1801561078957610b34575b50813b156100d1576000610aa260405190565b6372424d9960e11b815260048101859052928390602490829084905af191821561078957610aee92610b1e575b5061088e600080610adf60405190565b60009088335af1610872610589565b7f16dd16959a056953a63cf14bf427881e762e54f03d86b864efea8238dd3b822f6109ac61099561098f336103f9565b610b2e906000610774818361010e565b38610acf565b610b44906000610774818361010e565b38610a8f565b610a5d919450610b689060203d6020116107d3576107c4818361010e565b9390610a53565b15610b7657565b60405162461bcd60e51b8152602060048201526014602482015273125b9cdd59999a58da595b9d081c185e5b595b9d60621b6044820152606490fd5b919082039182116104f357565b15610bc657565b60405162461bcd60e51b815260206004820152600d60248201526c1499599d5b990819985a5b1959609a1b6044820152606490fd5b9190610c06836103f9565b91610c10846103f9565b92600093610c1d85610402565b96875b84891015610d6457610c31836103f9565b906020610c3d60405190565b6304a8fe6560e41b815292839060049082905afa91821561078957600092610d40575b5081610c6b916104e6565b98610c75856103f9565b9163d96a094a610c89610623848a8c610425565b843b156100d157610caf9261072f8c93610ca260405190565b9586948593849360e01b90565b0391875af1801561078957610d24575b50610cc9306103f9565b610cd761062383898b610425565b833b156100d157610cee938a928361092460405190565b03925af191821561078957610d0892610d0e575060010190565b97610c20565b61077c90893d8b1161078257610774818361010e565b610d3a90893d8b1161078257610774818361010e565b38610cbf565b610c6b919250610d5d9060203d81116107d3576107c4818361010e565b9190610c60565b949392509650507f0d69574e7599e85836fc9fc7c4f2217b67bcb56dc4d97aa86e38dc6d12e13b54610da6610dc7959661088e610d9e8790565b341015610b6f565b91610db0336103f9565b93610dbe8661085560405190565b0390a334610bb2565b90610dd181610402565b8211610ddb575050565b806100e392610de960405190565b600091335af1610df7610589565b50610bbf565b15610e0457565b60405162461bcd60e51b815260206004820152602960248201527f4e6f7420656e6f75676820746f6b656e7320617661696c61626c6520666f7220604482015268717569636b2062757960b81b6064820152608490fd5b80156104f3576000190190565b9081526040810192916100e39160200152565b9091610e86826103f9565b92610e90836103f9565b93610e9a846103f9565b600093610eaf610ea986610402565b976103f9565b90610eb960405190565b6316e6a97960e11b815294602086600481865afa958615610789576000966110f6575b50949794610ef4818a610eee565b9190565b11610dfd565b855b8187101561109b57610f2d996020610f17610f116001610402565b83610bb2565b6040519c8d9182919063cf6a68bf60e01b61072f565b0381885afa9a8b156107895760009b61107b575b50610f4b866103f9565b916020610f5760405190565b6304a8fe6560e41b815293849060049082905afa92831561078957600093611057575b5082610f85916104e6565b9a610f8f886103f9565b9263d96a094a90843b156100d157610fb5918c91610fac60405190565b93849260e01b90565b8252600482018590526024908290885af180156107895761103b575b50610fdb306103f9565b90833b156100d157610ff3938b928361092460405190565b03925af190811561078957611018926110119261101f575b50610e5b565b9660010190565b9598610ef6565b611035908b3d8d1161078257610774818361010e565b3861100b565b611051908b3d8d1161078257610774818361010e565b38610fd1565b610f859193506110749060203d81116107d3576107c4818361010e565b9290610f7a565b611094919b5060203d81116107d3576107c4818361010e565b9938610f41565b95509350965050506110b5610dc7939461088e610d9e8590565b7f4ff1827d77ab49e21c8d61595e19baa6394b51f1ff63545cf5561c23c3c7a9d3836110e0336103f9565b93610dbe6110ed60405190565b92839283610e68565b61111091965060203d6020116107d3576107c4818361010e565b9438610edc565b9091611122826103f9565b61112b836103f9565b60009261113784610402565b95865b818810156112575761114b846103f9565b90602061115760405190565b6304a8fe6560e41b815292839060049082905afa91821561078957600092611233575b5081611185916104e6565b976111a46020611194886103f9565b93631249c58b90610fac60405190565b82526004908290875af190811561078957600091611215575b506111c7306103f9565b90833b156100d1576111df9389928361092460405190565b03925af1918215610789576111f9926111ff575060010190565b9661113a565b61077c90883d8a1161078257610774818361010e565b61122d915060203d81116107d3576107c4818361010e565b386111bd565b6111859192506112509060203d81116107d3576107c4818361010e565b919061117a565b93509150945061126f610dc7939461088e610d9e8590565b7f5b7affbbc942cba91dea50b9e90a9ecdbe2801c866163786c10754f496e6d009836110e0336103f9565b906112a761088e836103f9565b9160206112b360405190565b6304a8fe6560e41b815293849060049082905afa928315610789576000936113a4575b506112e361088e826103f9565b9063d96a094a823b156100d1576113036112fc60405190565b9160e01b90565b81526004810184905260008160248134875af180156107895761138e575b5061132b306103f9565b91803b156100d15783600091611345948361092460405190565b03925af19182156107895761135e926109b157506103f9565b7fbf77fd13a39d14dc0da779342c14105c38d9a5d0c60f2caa22f5fd1d5525416d6109ac61099561098f336103f9565b61139e906000610774818361010e565b38611321565b6113be91935060203d6020116107d3576107c4818361010e565b91386112d6565b156113cc57565b60405162461bcd60e51b815260206004820152602160248201527f4e6f20746f6b656e7320617661696c61626c6520666f7220717569636b2062756044820152607960f81b6064820152608490fd5b611424816103f9565b9061142e816103f9565b9061144161143b826103f9565b926103f9565b90632dcd52f29261145160405190565b9261145c8560e01b90565b8452602084600481845afa938415610789576000946116a3575b5061148f600094611489610eea87610402565b116113c5565b6114a261149b60405190565b9560e01b90565b8552602085600481845afa908115610789576114d76020926114f597600091611686575b506114d16001610402565b90610bb2565b906114e160405190565b9687928391829163cf6a68bf60e01b61072f565b03915afa93841561078957600094611661575b50611512906103f9565b93602061151e60405190565b6304a8fe6560e41b815295869060049082905afa9485156107895760009561163c575b5061154b906103f9565b9163d96a094a833b156100d1576115646112fc60405190565b815260048101859052818160248189885af1801561078957611620575b5061158b306103f9565b92803b156100d1578482916115b895836115a460405190565b8098819582946109386323b872dd60e01b90565b03925af1928315610789576115d393611603575b50506103f9565b7fcd02dec8b4899a0b071b135c1c28f8b9f04c32c5c71c7ef2562287f8b23866016109ac61099561098f336103f9565b8161161992903d1061078257610774818361010e565b38806115cc565b61163690823d841161078257610774818361010e565b38611581565b61154b91955061165a9060203d6020116107d3576107c4818361010e565b9490611541565b61151291945061167f9060203d6020116107d3576107c4818361010e565b9390611508565b61169d9150843d86116107d3576107c4818361010e565b386114c6565b6116bd91945060203d6020116107d3576107c4818361010e565b923861147656fea2646970667358221220bbe65ca65988e893191995444c300ebbf463c92829830be19687cb7e38137ab664736f6c634300081c0033";

type FlipPeripheryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: FlipPeripheryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class FlipPeriphery__factory extends ContractFactory {
  constructor(...args: FlipPeripheryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      FlipPeriphery & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): FlipPeriphery__factory {
    return super.connect(runner) as FlipPeriphery__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FlipPeripheryInterface {
    return new Interface(_abi) as FlipPeripheryInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): FlipPeriphery {
    return new Contract(address, _abi, runner) as unknown as FlipPeriphery;
  }
}
