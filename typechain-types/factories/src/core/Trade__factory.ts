/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type { Trade, TradeInterface } from "../../../src/core/Trade";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_initialPrice",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_maxSupply",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_creatorFeePercent",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ERC721EnumerableForbiddenBatchMint",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "ERC721IncorrectOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ERC721InsufficientApproval",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "approver",
        type: "address",
      },
    ],
    name: "ERC721InvalidApprover",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "ERC721InvalidOperator",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "ERC721InvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "ERC721InvalidReceiver",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "ERC721InvalidSender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ERC721NonexistentToken",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "ERC721OutOfBoundsIndex",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "buyer",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "creatorFee",
        type: "uint256",
      },
    ],
    name: "TokenBought",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "creatorFee",
        type: "uint256",
      },
    ],
    name: "TokenMinted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "seller",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "creatorFee",
        type: "uint256",
      },
    ],
    name: "TokenSold",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "availableTokens",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "baseURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "buy",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "supply",
        type: "uint256",
      },
    ],
    name: "calculatePrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "creator",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "creatorFeePercent",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "currentSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "description",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getAllAvailableTokens",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "getAvailableTokenByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getAvailableTokensCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "start",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "limit",
        type: "uint256",
      },
    ],
    name: "getAvailableTokensPaginated",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getBuyPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getBuyPriceAfterFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getSellPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getSellPriceAfterFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "initialPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "isOnSale",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "mint",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC721Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "sell",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_baseURI",
        type: "string",
      },
    ],
    name: "setBaseURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_creator",
        type: "address",
      },
    ],
    name: "setCreator",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_description",
        type: "string",
      },
    ],
    name: "setDescription",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "tokenByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "tokenIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "tokenOfOwnerByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523461002e5761001d610014610171565b93929092610196565b604051612c066105508239612c0690f35b600080fd5b634e487b7160e01b600052604160045260246000fd5b90601f01601f191681019081106001600160401b0382111761006a57604052565b610033565b9061008361007c60405190565b9283610049565b565b6001600160401b03811161006a57602090601f01601f19160190565b60005b8381106100b45750506000910152565b81810151838201526020016100a4565b909291926100d96100d482610085565b61006f565b938185528183011161002e576100839160208501906100a1565b9080601f8301121561002e57815161010d926020016100c4565b90565b919060a08382031261002e5782516001600160401b03811161002e57816101389185016100f3565b60208401519093906001600160401b03811161002e578261015a9183016100f3565b604082015160608301516080909301519194909350565b61018f613156803803806101848161006f565b928339810190610110565b9091929394565b610083948594859433929190610237565b90600019905b9181191691161790565b61010d61010d61010d9290565b906101d461010d6101db926101b7565b82546101a7565b9055565b906001600160a01b03906101ad565b61010d90610202906001600160a01b031682565b6001600160a01b031690565b61010d906101ee565b61010d9061020e565b9061023061010d6101db92610217565b82546101df565b61024d6102629661025493949661025b9661026d565b600b6101c4565b600c6101c4565b600d6101c4565b61008333600e610220565b9061008392916102ab565b61020261010d61010d9290565b61010d90610278565b61029790610202565b9052565b602081019291610083919061028e565b916102b5916102ff565b60006102c081610285565b6102c981610202565b6102d284610202565b146102e2575050610083906104f8565b631e4fbdf760e01b825281906102fb906004830161029b565b0390fd5b610083918291829182916104cf565b634e487b7160e01b600052602260045260246000fd5b9060016002830492168015610344575b602083101461033f57565b61030e565b91607f1691610334565b9160001960089290920291821b911b6101ad565b919061037361010d6101db936101b7565b90835461034e565b61008391600091610362565b818110610392575050565b806103a0600060019361037b565b01610387565b9190601f81116103b557505050565b6103c761008393600052602060002090565b906020601f8401819004830193106103e9575b6020601f909101040190610387565b90915081906103da565b906103fc815190565b906001600160401b03821161006a5761041f826104198554610324565b856103a6565b602090601f831160011461045a576101db92916000918361044f575b5050600019600883021c1916906002021790565b01519050388061043b565b601f1983169161046f85600052602060002090565b9260005b8181106104ad57509160029391856001969410610494575b50505002019055565b01516000196008601f8516021c1916905538808061048b565b91936020600181928787015181550195019201610473565b90610083916103f3565b906104de6100839260006104c5565b60016104c5565b61010d90610202565b61010d90546104e5565b61051e610518610508600a6104ee565b61051384600a610220565b610217565b91610217565b907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e061054960405190565b600090a356fe6080604052600436101561001257600080fd5b60003560e01c8063018a25e8146102e257806301ffc9a7146102dd57806302d05d3f146102d85780630583e9f8146102d357806306fdde03146102ce578063081812fc146102c9578063095ea7b3146102c45780631249c58b146102bf57806312ea5c7e146102ba578063150b7a02146102b557806318160ddd146102b05780631d0806ae146102ab57806321a1c184146102a657806323b872dd146102a15780632dcd52f21461029c5780632f745c59146102975780633f5160181461029257806342842e0e1461028d57806343d32e9c146102885780634a8fe650146102835780634f6ccce71461027e57806353613dd31461027957806355f804b3146102745780635eba096b1461026f5780636352211e1461026a5780636c0360eb1461026557806370a0823114610260578063715018a61461025b5780637284e41614610256578063771282f6146102515780638da5cb5b1461024c57806390c3f38f1461024757806395d89b4114610242578063a22cb4651461023d578063ad64d06814610238578063ae10426514610233578063b88d4fde1461022e578063c87b56dd14610229578063cf6a68bf14610224578063d5abeb011461021f578063d96a094a1461021a578063e4849b3214610215578063e985e9c514610210578063f0f2805f1461020b5763f2fde38b036102f257610d9e565b610d83565b610d67565b610d2c565b610d19565b610cfe565b610cd7565b610cbc565b610ca0565b610c85565b610c6a565b610bf5565b610ba2565b610b8a565b610b6f565b610b54565b610b2d565b610b09565b610aee565b610ad3565b610991565b610975565b610941565b610900565b6108d9565b6108be565b6108a3565b61088a565b610872565b610842565b610826565b61080d565b6107c9565b6107ae565b610786565b61074c565b610611565b610594565b610576565b610522565b6104fb565b610474565b6103d6565b610363565b6102fd565b60009103126102f257565b600080fd5b9052565b565b346102f25761030d3660046102e7565b610328610318610dc7565b6040519182918290815260200190565b0390f35b6001600160e01b031981165b036102f257565b905035906102fb8261032c565b906020828203126102f2576103609161033f565b90565b346102f25761032861037e61037936600461034c565b610dd4565b6040515b91829182901515815260200190565b610360916008021c5b6001600160a01b031690565b906103609154610391565b6103606000600e6103a6565b6102f79061039a565b6020810192916102fb91906103bd565b346102f2576103e63660046102e7565b6103286103f16103b1565b604051918291826103c6565b80610338565b905035906102fb826103fd565b906020828203126102f25761036091610403565b6103606103606103609290565b9061043b90610424565b600052602052604060002090565b610360916008021c81565b906103609154610449565b600061046f610360926011610431565b610454565b346102f25761032861031861048a366004610410565b61045f565b60005b8381106104a25750506000910152565b8181015183820152602001610492565b6104d36104dc6020936104e6936104c7815190565b80835293849260200190565b9586910161048f565b601f01601f191690565b0190565b6020808252610360929101906104b2565b346102f25761050b3660046102e7565b610328610516610e11565b604051918291826104ea565b346102f2576103286103f1610538366004610410565b610e1b565b6103388161039a565b905035906102fb8261053d565b91906040838203126102f25761036090602061056f8286610546565b9401610403565b346102f25761058f610589366004610553565b90610e2e565b604051005b61059f3660046102e7565b610328610318611026565b906105ca6105c36105b9845190565b8084529260200190565b9260200190565b9060005b8181106105db5750505090565b9091926105f86105f16001928651815260200190565b9460200190565b9291016105ce565b6020808252610360929101906105aa565b346102f2576106213660046102e7565b61032861062c6111e1565b60405191829182610600565b634e487b7160e01b600052604160045260246000fd5b90601f01601f1916810190811067ffffffffffffffff82111761067057604052565b610638565b906102fb61068260405190565b928361064e565b67ffffffffffffffff811161067057602090601f01601f19160190565b90826000939282370152565b909291926106c76106c282610689565b610675565b93818552818301116102f2576102fb9160208501906106a6565b9080601f830112156102f257816020610360933591016106b2565b906080828203126102f2576107118183610546565b9261071f8260208501610546565b9261072d8360408301610403565b92606082013567ffffffffffffffff81116102f25761036092016106e1565b346102f25761032861076b6107623660046106fc565b92919091611211565b604051918291826001600160e01b0319909116815260200190565b346102f2576107963660046102e7565b61032861031860085490565b6103606000600b610454565b346102f2576107be3660046102e7565b6103286103186107a2565b346102f2576107d93660046102e7565b610328610318611238565b90916060828403126102f2576103606107fd8484610546565b93604061056f8260208701610546565b346102f25761058f6108203660046107e4565b916112a3565b346102f2576108363660046102e7565b61032861031860105490565b346102f257610328610318610858366004610553565b9061134c565b906020828203126102f25761036091610546565b346102f25761058f61088536600461085e565b61144f565b346102f25761058f61089d3660046107e4565b9161146a565b346102f2576108b33660046102e7565b61032861031861147e565b346102f2576108ce3660046102e7565b6103286103186114c2565b346102f2576103286103186108ef366004610410565b6114dd565b6103606000600d610454565b346102f2576109103660046102e7565b6103286103186108f4565b906020828203126102f257813567ffffffffffffffff81116102f25761036092016106e1565b346102f25761058f61095436600461091b565b6116c9565b91906040838203126102f25761036090602061056f8286610403565b346102f25761032861062c61098b366004610959565b90611785565b346102f2576103286103f16109a7366004610410565b611814565b634e487b7160e01b600052600060045260246000fd5b634e487b7160e01b600052602260045260246000fd5b90600160028304921680156109f8575b60208310146109f357565b6109c2565b91607f16916109e8565b80546000939291610a1f610a15836109d8565b8085529360200190565b9160018116908115610a715750600114610a3857505050565b610a4b9192939450600052602060002090565b916000925b818410610a5d5750500190565b805484840152602090930192600101610a50565b92949550505060ff1916825215156020020190565b9061036091610a02565b906102fb610aaa92610aa160405190565b93848092610a86565b038361064e565b90600010610ac25761036090610a90565b6109ac565b61036060006012610ab1565b346102f257610ae33660046102e7565b610328610516610ac7565b346102f257610328610318610b0436600461085e565b61181d565b346102f257610b193660046102e7565b61058f611885565b61036060006013610ab1565b346102f257610b3d3660046102e7565b610328610516610b21565b6103606000600f610454565b346102f257610b643660046102e7565b610328610318610b48565b346102f257610b7f3660046102e7565b6103286103f161188d565b346102f25761058f610b9d36600461091b565b6118b6565b346102f257610bb23660046102e7565b6103286105166118bf565b801515610338565b905035906102fb82610bbd565b91906040838203126102f257610360906020610bee8286610546565b9401610bc5565b346102f25761058f610c08366004610bd2565b906118c9565b634e487b7160e01b600052603260045260246000fd5b8054821015610c4757610c3e600191600052602060002090565b91020190600090565b610c0e565b6010548110156102f257610c64610360916010610c24565b90610454565b346102f257610328610318610c80366004610410565b610c4c565b346102f257610328610318610c9b366004610410565b6118d4565b346102f25761058f610cb33660046106fc565b92919091611965565b346102f257610328610516610cd2366004610410565b61197c565b346102f257610328610318610ced366004610410565b611987565b6103606000600c610454565b346102f257610d0e3660046102e7565b610328610318610cf2565b61058f610d27366004610410565b611aaf565b346102f25761058f610d3f366004610410565b611cbb565b91906040838203126102f257610360906020610d608286610546565b9401610546565b346102f25761032861037e610d7d366004610d44565b90611cd9565b346102f25761032861037e610d99366004610410565b611cfe565b346102f25761058f610db136600461085e565b611d68565b6103609081565b6103609054610db6565b610360610c9b600f610dbd565b610ddd81611d71565b908115610de8575090565b9050610e04632fa757f360e01b5b916001600160e01b03191690565b1490565b61036090610a90565b6103606000610e08565b61036090610e2881611d7a565b50611dba565b6102fb913391611dd6565b15610e4057565b60405162461bcd60e51b815260206004820152601260248201527113585e081cdd5c1c1b1e481c995858da195960721b604482015280606481015b0390fd5b634e487b7160e01b600052601160045260246000fd5b81810292918115918404141715610ea857565b610e7f565b634e487b7160e01b600052601260045260246000fd5b90610ecd565b9190565b908115610ed8570490565b610ead565b91908201809211610ea857565b15610ef157565b60405162461bcd60e51b8152602060048201526014602482015273125b9cdd59999a58da595b9d081c185e5b595b9d60621b6044820152606490fd5b6000198114610ea85760010190565b90600019905b9181191691161790565b90610f5c610360610f6392610424565b8254610f3c565b9055565b6103609061039a906001600160a01b031682565b61036090610f67565b61036090610f7b565b9081526040810192916102fb9160200152565b0152565b6103609061039a565b6103609054610fa4565b90610fc46106c283610689565b918252565b3d15610fe357610fd83d610fb7565b903d6000602084013e565b606090565b15610fef57565b60405162461bcd60e51b815260206004820152600f60248201526e151c985b9cd9995c8819985a5b1959608a1b6044820152606490fd5b61104861103260085490565b611042610ec9610360600c610dbd565b10610e39565b611050610dc7565b61036061115761108361106c611066600d610dbd565b85610e95565b61107d670de0b6b3a7640000610424565b90610ec3565b61109b6110936103608387610edd565b341015610eea565b6110b76110a760085490565b6110b16001610424565b90610edd565b936110c28533611de3565b6110de6110d76110d2600f610dbd565b610f2d565b600f610f4c565b6110e733610f84565b6110f086610424565b907f10546b1a6f5245ff0ffa18c256b9e46859c585cbb473b453fcd4c2dc39ae08db61111b60405190565b80611127878783610f8d565b0390a361115260008061113a600e610fad565b60405160009187905af161114c610fc9565b50610fe8565b610edd565b611e31565b9061117761116b6105b9845490565b92600052602060002090565b9060005b8181106111885750505090565b9091926111ac6111a560019261119d87610dbd565b815260200190565b9460010190565b92910161117b565b906103609161115c565b906102fb610aaa926111cf60405190565b938480926111b4565b610360906111be565b61036060106111d8565b6112046111fe6103609263ffffffff1690565b60e01b90565b6001600160e01b03191690565b5050505061121d600090565b5061036063150b7a026111eb565b91908203918211610ea857565b61036061124361147e565b61125961106c611253600d610dbd565b83610e95565b9061122b565b61039a6103606103609290565b6103609061125f565b60409061129c6102fb9496959396611295606084019860008501906103bd565b6020830152565b01906103bd565b90916000926112b18461126c565b6112ba8161039a565b6112c38361039a565b1461130e57506112d590823391611e7b565b916112df8161039a565b6112e88461039a565b036112f35750505050565b6364283d7b60e01b84528392610e7b92909160048501611275565b84610e7b8192633250574960e11b8352600483016103c6565b9160206102fb929493610fa0604082019660008301906103bd565b9061043b90610f84565b6113586103608261181d565b82101561137b5761036091611371611376926006611342565b610431565b610dbd565b63295f44f760e21b600090815291611394916004611327565b036000fd5b156113a057565b60405162461bcd60e51b815260206004820152602360248201527f4f6e6c792063726561746f722063616e2063616c6c20746869732066756e637460448201526234b7b760e91b6064820152608490fd5b6102fb9061141961140a611405600e610fad565b61039a565b6114133361039a565b14611399565b611444565b906001600160a01b0390610f42565b9061143d610360610f6392610f84565b825461141e565b6102fb90600e61142d565b6102fb906113f1565b6103606000610fb7565b610360611458565b90916102fb92611478611462565b92611965565b611488600f610dbd565b611495610ec96000610424565b11156114b557610360610c9b6114ab600f610dbd565b6112596001610424565b610360610c9b6000610424565b6103606114cd610dc7565b6110b161106c611253600d610dbd565b6114e961036060085490565b8110156114fe57610c64610360916008610c24565b610e7b9060009182916115108361126c565b63295f44f760e21b845260048401611327565b6102fb9061153761140a611405600e610fad565b6116be565b9160001960089290920291821b911b610f42565b9190611561610360610f6393610424565b90835461153c565b6102fb91600091611550565b818110611580575050565b8061158e6000600193611569565b01611575565b9190601f81116115a357505050565b6115b56102fb93600052602060002090565b906020601f8401819004830193106115d7575b6020601f909101040190611575565b90915081906115c8565b906115ea815190565b9067ffffffffffffffff82116106705761160e8261160885546109d8565b85611594565b602090601f831160011461164957610f6392916000918361163e575b5050600019600883021c1916906002021790565b01519050388061162a565b601f1983169161165e85600052602060002090565b9260005b81811061169c57509160029391856001969410611683575b50505002019055565b01516000196008601f8516021c1916905538808061167a565b91936020600181928787015181550195019201611662565b906102fb916115e1565b6102fb9060126116b4565b6102fb90611523565b156116d957565b60405162461bcd60e51b815260206004820152601960248201527f537461727420696e646578206f7574206f6620626f756e6473000000000000006044820152606490fd5b67ffffffffffffffff81116106705760208091020190565b90610fc46106c28361171e565b369037565b906102fb61175e61175884611736565b9361171e565b601f190160208401611743565b90611774825190565b811015610c47576020809102010190565b916117b26117aa6010936117a461179d610360875490565b87106116d2565b85610edd565b835490611e86565b916117c56117c0858561122b565b611748565b91845b845b81101561180b57611804816117fe6117e8610c646117ca9588610c24565b6117fb6117f58b8561122b565b8961176b565b52565b60010190565b90506117c8565b50935050905090565b61036090611d7a565b60006118288161126c565b6118318161039a565b61183a8461039a565b1461184f575050611376610360916003611342565b6322718ad960e21b82528190610e7b90600483016103c6565b611870611e98565b6102fb6102fb611880600061126c565b611ecf565b6102fb611868565b610360600a610fad565b6102fb906118ab61140a611405600e610fad565b6102fb9060136116b4565b6102fb90611897565b6103606001610e08565b6102fb919033611f48565b6118de6000610424565b811461195a57610360906110b16118f5600b610dbd565b9161191c61194561193b61193b61194a611922611912600b610dbd565b61191c6002610424565b90610e95565b61191c61194561193b896119366064610424565b610e95565b61107d600c610dbd565b61200c565b9461193681611936612710610424565b50610360600b610dbd565b906102fb9392916119778383836112a3565b612166565b506103606012610e08565b610c6461036091611996600090565b506010610c24565b156119a557565b60405162461bcd60e51b815260206004820152601f60248201527f546f6b656e206973206e6f7420617661696c61626c6520666f722073616c65006044820152606490fd5b6102fb90611a156119fa82611814565b611a0f611a0961140530610f84565b9161039a565b1461199e565b6111576102fb91611a24610dc7565b611a3461106c611253600d610dbd565b91611a456110936103608585610edd565b611a5981611a5230610f84565b3390612283565b611a6281612346565b611a726110d76110d2600f610dbd565b611a84611a7e33610f84565b91610424565b907f884543c08d36fb5c9b3b688dd0453c9f287199124bdbddb3b7f9ca885a4d34a061111b60405190565b6102fb906119ea565b15611abf57565b60405162461bcd60e51b815260206004820152601360248201527221b0b63632b91034b9903737ba1037bbb732b960691b6044820152606490fd5b6102fb90611b1c611b0a82611814565b611b16611a093361039a565b14611ab8565b611bc6565b8015610ea8576000190190565b15611b3557565b60405162461bcd60e51b815260206004820152601960248201527f5472616e7366657220746f2073656c6c6572206661696c6564000000000000006044820152606490fd5b15611b8157565b60405162461bcd60e51b815260206004820152601a60248201527f5472616e7366657220746f2063726561746f72206661696c65640000000000006044820152606490fd5b6000806102fb92611c928280611bda61147e565b93611c7a611bf461106c611bee600d610dbd565b88610e95565b8096611bfd3390565b93611c1181611c0b30610f84565b87612283565b611c1a816123d5565b611c2f6110d7611c2a600f610dbd565b611b21565b611c3b611a7e86610f84565b907f8323bebb324b6e1a1d4886a1f210640461bb275263dae69967f001d053ab0b2b611c6660405190565b80611c72878783610f8d565b0390a361122b565b60405190818003925af1611c8c610fc9565b50611b2e565b611c9c600e610fad565b90611ca660405190565b90818003925af1611cb5610fc9565b50611b7a565b6102fb90611afa565b610360905b60ff1690565b6103609054611cc4565b61036091611cf4611cf992611cec600090565b506005611342565b611342565b611ccf565b611d0790611814565b610e04611a0961140530610f84565b6102fb90611d22611e98565b6000611d2d8161126c565b611d368161039a565b611d3f8461039a565b14611d4f5750506102fb90611ecf565b631e4fbdf760e01b82528190610e7b90600483016103c6565b6102fb90611d16565b610360906123fb565b611d8381612424565b90600090611d936114058361126c565b611d9c8461039a565b14611da657505090565b637e27328960e01b82526004820152602490fd5b611dd161036091611dc9600090565b506004610431565b610fad565b916001916102fb9361243b565b6102fb91611def611462565b91612567565b15611dfc57565b60405162461bcd60e51b815260206004820152600d60248201526c1499599d5b990819985a5b1959609a1b6044820152606490fd5b611e3b903461122b565b611e456000610424565b8111611e4e5750565b6000806102fb92611e5c3390565b90611e6660405190565b90818003925af1611e75610fc9565b50611df5565b610360929190612581565b9080821015611e93575090565b905090565b611ea061188d565b3390611eae611a098361039a565b03611eb65750565b63118cdaa760e01b6000908152906113949060046103c6565b611ef5611eef611edf600a610fad565b611eea84600a61142d565b610f84565b91610f84565b907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0611f2060405190565b80805b0390a3565b9060ff90610f42565b90611f41610360610f6392151590565b8254611f28565b6000611f566114058261126c565b611f5f8461039a565b14611fb85750611f23611fae611fa883611eea87611fa388611cf47f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31996005611342565b611f31565b93610f84565b9361038260405190565b630b61174360e31b815280610e7b84600483016103c6565b611cc96103606103609290565b61036090611ff1610ec96103609460ff1690565b901c90565b61036090612007610ec96103609490565b901b90565b6120166000610424565b81146120fc5760016120278261261a565b61203082611fd0565b808080808096612041828098611fdd565b9061204b90610424565b9061205591611ff6565b61205f818a610ec3565b019061206a91611fdd565b6120748189610ec3565b019061207f91611fdd565b6120898188610ec3565b019061209491611fdd565b61209e8187610ec3565b01906120a991611fdd565b6120b38186610ec3565b01906120be91611fdd565b6120c88185610ec3565b01906120d391611fdd565b6120dd8184610ec3565b01906120e891611fdd565b90816120f391610ec3565b61036091611e86565b506103606000610424565b905051906102fb8261032c565b906020828203126102f25761036091612107565b9092612159906121526103609694612148608086019760008701906103bd565b60208501906103bd565b6040830152565b60608184039101526104b2565b6000939192833b612179610ec987610424565b11612186575b5050505050565b602091612195611eea86610f84565b9086336121be6121a460405190565b97889687958694630a85bd0160e11b865260048601612128565b03925af160009181612252575b5061221d57506121e0565b388080808061217f565b6121e8610fc9565b80516121f6610ec985610424565b036122155750633250574960e11b82528190610e7b90600483016103c6565b805190602001fd5b61222d630a85bd0160e11b610df6565b036122395750506121d6565b633250574960e11b82528190610e7b90600483016103c6565b61227591925060203d60201161227c575b61226d818361064e565b810190612114565b90386121cb565b503d612263565b9192906000926122928461126c565b9161229c8361039a565b6122a58261039a565b146122ef576122b883876122be93611e7b565b9261039a565b6122c78361039a565b036122e257637e27328960e01b845260048401859052602484fd5b6112df819592939561039a565b633250574960e11b85528480610e7b85600483016103c6565b634e487b7160e01b600052603160045260246000fd5b8054801561234157600019019061233e6123388383610c24565b90611569565b55565b612308565b60006123a86102fb9260116113716123a36123646113768585610431565b61036060109161239e612384610c6461237e6114ab875490565b86610c24565b612398816123928588610c24565b90611550565b87610431565b610f4c565b61231e565b611569565b908154916801000000000000000083101561067057826123929160016102fb95018155610c24565b6102fb906123e48160106123ad565b61239e6123f36114ab60105490565b916011610431565b63780e9d6360e01b6001600160e01b031982161490811561241a575090565b61036091506127cc565b611dd161036091612433600090565b506002610431565b92919091808115612549575b612462575b50509061245d6102fb926004610431565b61142d565b61246b83611d7a565b9160009061247b6114058361126c565b6124848261039a565b14158061252f575b80612518575b6124ff5750509161245d916102fb94936124af575b50919261244c565b6124b890610f84565b6124c184610f84565b6124ca83610424565b917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9256124f560405190565b600090a4386124a7565b63a9fbf51f60e01b82528190610e7b90600483016103c6565b5061252a6125268286611cd9565b1590565b612492565b506125398161039a565b6125428561039a565b141561248c565b50612557611405600061126c565b6125608361039a565b1415612447565b906102fb92916125778282612817565b611977600061126c565b909161258e90838361288d565b916125bc61259c600061126c565b6125a58161039a565b6125ae8661039a565b036125f95761140583612a3c565b6125c58361039a565b036125d4576103609150612a8d565b6125dd8261039a565b6125e68461039a565b036125f057505090565b61036091612a5e565b6126028461039a565b61260b8661039a565b1461039a5761140583866129bb565b6000612715610ec961270f61262e84610424565b9461264261263c6080611fd0565b82611fdd565b8681116127b5575b5061265861263c6040611fd0565b61266186610424565b811161279e575b5061267661263c6020611fd0565b61267f86610424565b8111612787575b5061269461263c6010611fd0565b61269d86610424565b8111612770575b506126b261263c6008611fd0565b6126bb86610424565b8111612759575b506126d061263c6004611fd0565b6126d986610424565b8111612742575b506126ee61263c6002611fd0565b6126f786610424565b811161272b575b506127096001611fd0565b90611fdd565b92610424565b1161271d5790565b610360906104e66001610424565b61273b9150956104e66002610424565b94386126fe565b6127529150956104e66004610424565b94386126e0565b6127699150956104e66008610424565b94386126c2565b6127809150956104e66010610424565b94386126a4565b6127979150956104e66020610424565b9438612686565b6127ae9150956104e66040610424565b9438612668565b6127c59150956104e66080610424565b943861264a565b6380ac58cd60e01b6001600160e01b03198216149081156127fc575b81156127f2575090565b6103609150612adb565b6001600160e01b03198116635b5e139f60e01b1491506127e8565b6000916128238361126c565b9161282d8361039a565b6128368261039a565b1461287457612846918391611e7b565b612852611a098361039a565b0361285b575050565b6339e3563760e11b82528190610e7b90600483016103c6565b633250574960e11b84528380610e7b85600483016103c6565b906128e061289a82612424565b9360006128a68161126c565b91846128b18461039a565b6128ba8361039a565b036129aa575b50506128cb8261039a565b6128d48761039a565b0361296f575b5061039a565b6128e98361039a565b0361293f575b6128fe8261245d836002610431565b61290d611a7e611fa885610f84565b917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef61293860405190565b600090a490565b61296a61294c6001610424565b61296461295a856003611342565b916104e683610dbd565b90610f4c565b6128ef565b61297b9082858161243b565b6129a46129886001610424565b612964612996886003611342565b916129a083610dbd565b0390565b386128da565b6129b49188612aeb565b38846128c0565b6123a86102fb926113716000936129fa856123a86129d88461181d565b956007856129e96113768484610431565b89808203612a01575b505050610431565b6006611342565b611371612a2e8461239e85612a2461137661239e97611371612a349b6006611342565b9485936006611342565b84610431565b8538896129f2565b6102fb90612a57612a4c60085490565b61239e836009610431565b60086123ad565b61239e82612a866102fb9461239e61137195612a7c6114ab8261181d565b9687916006611342565b6007610431565b6123a36102fb9161036060006123a8600893612aaa6114ab865490565b61137160099161239e612acd610c64612ac66113768888610431565b938b610c24565b612a2e81612392858d610c24565b610e046301ffc9a760e01b610df6565b90612afa612526848385612b4b565b612b0357505050565b6000928392612b17611a096114058661126c565b03612b3457637e27328960e01b8352600483015250602481010390fd5b63177e802f60e01b8352610e7b9160048401611327565b90612b59611405600061126c565b612b628261039a565b14159283612b71575b50505090565b90919250612b7e8261039a565b612b878461039a565b14928315612bbc575b508215612ba2575b5050388080612b6b565b612bb49192506122b8611a0991611dba565b143880612b98565b612bc99193508290611cd9565b9138612b9056fea264697066735822122020c9f160c17cec013d5a9bdbdfef18392355b264f826d12896f55e131c3a2b4464736f6c634300081c0033";

type TradeConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TradeConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Trade__factory extends ContractFactory {
  constructor(...args: TradeConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _name: string,
    _symbol: string,
    _initialPrice: BigNumberish,
    _maxSupply: BigNumberish,
    _creatorFeePercent: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      _name,
      _symbol,
      _initialPrice,
      _maxSupply,
      _creatorFeePercent,
      overrides || {}
    );
  }
  override deploy(
    _name: string,
    _symbol: string,
    _initialPrice: BigNumberish,
    _maxSupply: BigNumberish,
    _creatorFeePercent: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      _name,
      _symbol,
      _initialPrice,
      _maxSupply,
      _creatorFeePercent,
      overrides || {}
    ) as Promise<
      Trade & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Trade__factory {
    return super.connect(runner) as Trade__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TradeInterface {
    return new Interface(_abi) as TradeInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Trade {
    return new Contract(address, _abi, runner) as unknown as Trade;
  }
}
