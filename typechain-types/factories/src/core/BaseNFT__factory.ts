/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type { BaseNFT, BaseNFTInterface } from "../../../src/core/BaseNFT";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_initialPrice",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_maxSupply",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_creatorFeePercent",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ERC721EnumerableForbiddenBatchMint",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "ERC721IncorrectOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ERC721InsufficientApproval",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "approver",
        type: "address",
      },
    ],
    name: "ERC721InvalidApprover",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "ERC721InvalidOperator",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "ERC721InvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "ERC721InvalidReceiver",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "ERC721InvalidSender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ERC721NonexistentToken",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "ERC721OutOfBoundsIndex",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "availableTokens",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "baseURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "contractURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "creator",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "creatorFeePercent",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "currentSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getAllAvailableTokens",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "getAvailableTokenByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getAvailableTokensCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "start",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "limit",
        type: "uint256",
      },
    ],
    name: "getAvailableTokensPaginated",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "initialPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC721Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_baseURI",
        type: "string",
      },
    ],
    name: "setBaseURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_creator",
        type: "address",
      },
    ],
    name: "setCreator",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "tokenByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "tokenIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "tokenOfOwnerByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523461002e5761001d610014610171565b93929092610196565b60405161227061054e823961227090f35b600080fd5b634e487b7160e01b600052604160045260246000fd5b90601f01601f191681019081106001600160401b0382111761006a57604052565b610033565b9061008361007c60405190565b9283610049565b565b6001600160401b03811161006a57602090601f01601f19160190565b60005b8381106100b45750506000910152565b81810151838201526020016100a4565b909291926100d96100d482610085565b61006f565b938185528183011161002e576100839160208501906100a1565b9080601f8301121561002e57815161010d926020016100c4565b90565b919060a08382031261002e5782516001600160401b03811161002e57816101389185016100f3565b60208401519093906001600160401b03811161002e578261015a9183016100f3565b604082015160608301516080909301519194909350565b61018f6127be803803806101848161006f565b928339810190610110565b9091929394565b91909293610083943392610235565b90600019905b9181191691161790565b61010d61010d61010d9290565b906101d261010d6101d9926101b5565b82546101a5565b9055565b906001600160a01b03906101ab565b61010d90610200906001600160a01b031682565b6001600160a01b031690565b61010d906101ec565b61010d9061020c565b9061022e61010d6101d992610215565b82546101dd565b61024b610260966102529394966102599661026b565b600b6101c2565b600c6101c2565b600d6101c2565b61008333600e61021e565b9061008392916102a9565b61020061010d61010d9290565b61010d90610276565b61029590610200565b9052565b602081019291610083919061028c565b916102b3916102fd565b60006102be81610283565b6102c781610200565b6102d084610200565b146102e0575050610083906104f6565b631e4fbdf760e01b825281906102f99060048301610299565b0390fd5b610083918291829182916104cd565b634e487b7160e01b600052602260045260246000fd5b9060016002830492168015610342575b602083101461033d57565b61030c565b91607f1691610332565b9160001960089290920291821b911b6101ab565b919061037161010d6101d9936101b5565b90835461034c565b61008391600091610360565b818110610390575050565b8061039e6000600193610379565b01610385565b9190601f81116103b357505050565b6103c561008393600052602060002090565b906020601f8401819004830193106103e7575b6020601f909101040190610385565b90915081906103d8565b906103fa815190565b906001600160401b03821161006a5761041d826104178554610322565b856103a4565b602090601f8311600114610458576101d992916000918361044d575b5050600019600883021c1916906002021790565b015190503880610439565b601f1983169161046d85600052602060002090565b9260005b8181106104ab57509160029391856001969410610492575b50505002019055565b01516000196008601f8516021c19169055388080610489565b91936020600181928787015181550195019201610471565b90610083916103f1565b906104dc6100839260006104c3565b60016104c3565b61010d90610200565b61010d90546104e3565b61051c610516610506600a6104ec565b61051184600a61021e565b610215565b91610215565b907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e061054760405190565b600090a356fe6080604052600436101561001257600080fd5b60003560e01c806301ffc9a71461024257806302d05d3f1461023d5780630583e9f81461023857806306fdde0314610233578063081812fc1461022e578063095ea7b31461022957806312ea5c7e14610224578063150b7a021461021f57806318160ddd1461021a5780631d0806ae1461021557806323b872dd146102105780632dcd52f21461020b5780632f745c59146102065780633f5160181461020157806342842e0e146101fc5780634f6ccce7146101f757806353613dd3146101f257806355f804b3146101ed5780635eba096b146101e85780636352211e146101e35780636c0360eb146101de57806370a08231146101d9578063715018a6146101d4578063771282f6146101cf5780638da5cb5b146101ca57806395d89b41146101c5578063a22cb465146101c0578063ad64d068146101bb578063b88d4fde146101b6578063c87b56dd146101b1578063cf6a68bf146101ac578063d5abeb01146101a7578063e8a3d485146101a2578063e985e9c51461019d5763f2fde38b0361025a57610bf7565b610bdb565b610b9d565b610b82565b610b5b565b610b40565b610b24565b610b09565b610a94565b610a41565b610a26565b610a0b565b6109e7565b6109cc565b6109b1565b61086f565b610853565b61081f565b6107de565b6107b7565b61079e565b610786565b610756565b61073a565b610721565b6106dd565b6106b5565b61067b565b610540565b6104bb565b610467565b610440565b6103a9565b61030b565b610289565b6001600160e01b031981165b0361025a57565b600080fd5b9050359061026c82610247565b565b9060208282031261025a576102829161025f565b90565b9052565b3461025a576102b76102a461029f36600461026e565b610c0f565b6040515b91829182901515815260200190565b0390f35b600091031261025a57565b610282916008021c5b6001600160a01b031690565b9061028291546102c6565b6102826000600e6102db565b610285906102cf565b60208101929161026c91906102f2565b3461025a5761031b3660046102bb565b6102b76103266102e6565b604051918291826102fb565b80610253565b9050359061026c82610332565b9060208282031261025a5761028291610338565b6102826102826102829290565b9061037090610359565b600052602052604060002090565b610282916008021c81565b90610282915461037e565b60006103a4610282926011610366565b610389565b3461025a576102b76103c46103bf366004610345565b610394565b6040519182918290815260200190565b60005b8381106103e75750506000910152565b81810151838201526020016103d7565b61041861042160209361042b9361040c815190565b80835293849260200190565b958691016103d4565b601f01601f191690565b0190565b6020808252610282929101906103f7565b3461025a576104503660046102bb565b6102b761045b610c21565b6040519182918261042f565b3461025a576102b761032661047d366004610345565b610c2b565b610253816102cf565b9050359061026c82610482565b919060408382031261025a576102829060206104b4828661048b565b9401610338565b3461025a576104d46104ce366004610498565b90610c3e565b604051005b906104f96104f26104e8845190565b8084529260200190565b9260200190565b9060005b81811061050a5750505090565b9091926105276105206001928651815260200190565b9460200190565b9291016104fd565b6020808252610282929101906104d9565b3461025a576105503660046102bb565b6102b761055b610cdf565b6040519182918261052f565b634e487b7160e01b600052604160045260246000fd5b90601f01601f1916810190811067ffffffffffffffff82111761059f57604052565b610567565b9061026c6105b160405190565b928361057d565b67ffffffffffffffff811161059f57602090601f01601f19160190565b90826000939282370152565b909291926105f66105f1826105b8565b6105a4565b938185528183011161025a5761026c9160208501906105d5565b9080601f8301121561025a57816020610282933591016105e1565b9060808282031261025a57610640818361048b565b9261064e826020850161048b565b9261065c8360408301610338565b92606082013567ffffffffffffffff811161025a576102829201610610565b3461025a576102b761069a61069136600461062b565b92919091610d2c565b604051918291826001600160e01b0319909116815260200190565b3461025a576106c53660046102bb565b6102b76103c460085490565b6102826000600b610389565b3461025a576106ed3660046102bb565b6102b76103c46106d1565b909160608284031261025a57610282610711848461048b565b9360406104b4826020870161048b565b3461025a576104d46107343660046106f8565b91610d8a565b3461025a5761074a3660046102bb565b6102b76103c460105490565b3461025a576102b76103c461076c366004610498565b90610e44565b9060208282031261025a576102829161048b565b3461025a576104d4610799366004610772565b610f64565b3461025a576104d46107b13660046106f8565b91610f91565b3461025a576102b76103c46107cd366004610345565b610fa5565b6102826000600d610389565b3461025a576107ee3660046102bb565b6102b76103c46107d2565b9060208282031261025a57813567ffffffffffffffff811161025a576102829201610610565b3461025a576104d46108323660046107f9565b611191565b919060408382031261025a576102829060206104b48286610338565b3461025a576102b761055b610869366004610837565b90611282565b3461025a576102b7610326610885366004610345565b611311565b634e487b7160e01b600052600060045260246000fd5b634e487b7160e01b600052602260045260246000fd5b90600160028304921680156108d6575b60208310146108d157565b6108a0565b91607f16916108c6565b805460009392916108fd6108f3836108b6565b8085529360200190565b916001811690811561094f575060011461091657505050565b6109299192939450600052602060002090565b916000925b81841061093b5750500190565b80548484015260209093019260010161092e565b92949550505060ff1916825215156020020190565b90610282916108e0565b9061026c6109889261097f60405190565b93848092610964565b038361057d565b906000106109a0576102829061096e565b61088a565b6102826000601261098f565b3461025a576109c13660046102bb565b6102b761045b6109a5565b3461025a576102b76103c46109e2366004610772565b61131a565b3461025a576109f73660046102bb565b6104d4611382565b6102826000600f610389565b3461025a57610a1b3660046102bb565b6102b76103c46109ff565b3461025a57610a363660046102bb565b6102b761032661138a565b3461025a57610a513660046102bb565b6102b761045b611394565b801515610253565b9050359061026c82610a5c565b919060408382031261025a57610282906020610a8d828661048b565b9401610a64565b3461025a576104d4610aa7366004610a71565b9061139e565b634e487b7160e01b600052603260045260246000fd5b8054821015610ae657610add600191600052602060002090565b91020190600090565b610aad565b60105481101561025a57610b03610282916010610ac3565b90610389565b3461025a576102b76103c4610b1f366004610345565b610aeb565b3461025a576104d4610b3736600461062b565b929190916113a9565b3461025a576102b761045b610b56366004610345565b6114c1565b3461025a576102b76103c4610b71366004610345565b611508565b6102826000600c610389565b3461025a57610b923660046102bb565b6102b76103c4610b76565b3461025a57610bad3660046102bb565b6102b761045b611562565b919060408382031261025a57610282906020610bd4828661048b565b940161048b565b3461025a576102b76102a4610bf1366004610bb8565b90611591565b3461025a576104d4610c0a366004610772565b61160a565b61028290611613565b6102829061096e565b6102826000610c18565b61028290610c388161163c565b5061167c565b61026c913391611698565b6102829081565b6102829054610c49565b90610c75610c696104e8845490565b92600052602060002090565b9060005b818110610c865750505090565b909192610caa610ca3600192610c9b87610c50565b815260200190565b9460010190565b929101610c79565b9061028291610c5a565b9061026c61098892610ccd60405190565b93848092610cb2565b61028290610cbc565b6102826010610cd6565b610282906102cf906001600160a01b031682565b61028290610ce9565b610d1f610d196102829263ffffffff1690565b60e01b90565b6001600160e01b03191690565b50505050610d38600090565b5061028263150b7a02610d06565b6102cf6102826102829290565b61028290610d46565b604090610d8361026c9496959396610d7c606084019860008501906102f2565b6020830152565b01906102f2565b9091600092610d9884610d53565b610da1816102cf565b610daa836102cf565b14610df95750610dbc908233916116a5565b91610dc6816102cf565b610dcf846102cf565b03610dda5750505050565b6364283d7b60e01b84528392610df592909160048501610d5c565b0390fd5b84610df58192633250574960e11b8352600483016102fb565b91602061026c929493610e2d604082019660008301906102f2565b0152565b61028290610cfd565b9061037090610e31565b610e506102828261131a565b821015610e735761028291610e69610e6e926006610e3a565b610366565b610c50565b63295f44f760e21b600090815291610e8c916004610e12565b036000fd5b610282906102cf565b6102829054610e91565b15610eab57565b60405162461bcd60e51b815260206004820152602360248201527f4f6e6c792063726561746f722063616e2063616c6c20746869732066756e637460448201526234b7b760e91b6064820152608490fd5b61026c90610f24610f15610f10600e610e9a565b6102cf565b610f1e336102cf565b14610ea4565b610f59565b906001600160a01b03905b9181191691161790565b90610f4e610282610f5592610e31565b8254610f29565b9055565b61026c90600e610f3e565b61026c90610efc565b90610f7a6105f1836105b8565b918252565b6102826000610f6d565b610282610f7f565b909161026c92610f9f610f89565b926113a9565b610fb161028260085490565b811015610fc657610b03610282916008610ac3565b610df5906000918291610fd883610d53565b63295f44f760e21b845260048401610e12565b61026c90610fff610f15610f10600e610e9a565b611186565b9160001960089290920291821b911b610f34565b9190611029610282610f5593610359565b908354611004565b61026c91600091611018565b818110611048575050565b806110566000600193611031565b0161103d565b9190601f811161106b57505050565b61107d61026c93600052602060002090565b906020601f84018190048301931061109f575b6020601f90910104019061103d565b9091508190611090565b906110b2815190565b9067ffffffffffffffff821161059f576110d6826110d085546108b6565b8561105c565b602090601f831160011461111157610f55929160009183611106575b5050600019600883021c1916906002021790565b0151905038806110f2565b601f1983169161112685600052602060002090565b9260005b8181106111645750916002939185600196941061114b575b50505002019055565b01516000196008601f8516021c19169055388080611142565b9193602060018192878701518155019501920161112a565b9061026c916110a9565b61026c90601261117c565b61026c90610feb565b156111a157565b60405162461bcd60e51b815260206004820152601960248201527f537461727420696e646578206f7574206f6620626f756e6473000000000000006044820152606490fd5b634e487b7160e01b600052601160045260246000fd5b9190820180921161120957565b6111e6565b9190820391821161120957565b67ffffffffffffffff811161059f5760208091020190565b90610f7a6105f18361121b565b369037565b9061026c61125b61125584611233565b9361121b565b601f190160208401611240565b90611271825190565b811015610ae6576020809102010190565b916112af6112a76010936112a161129a610282875490565b871061119a565b856111fc565b8354906116b0565b916112c26112bd858561120e565b611245565b91845b845b81101561130857611301816112fb6112e5610b036112c79588610ac3565b6112f86112f28b8561120e565b89611268565b52565b60010190565b90506112c5565b50935050905090565b6102829061163c565b600061132581610d53565b61132e816102cf565b611337846102cf565b1461134c575050610e6e610282916003610e3a565b6322718ad960e21b82528190610df590600483016102fb565b61136d6116c2565b61026c61026c61137d6000610d53565b6116ff565b61026c611365565b610282600a610e9a565b6102826001610c18565b61026c919033611778565b9061026c9392916113bb838383610d8a565b61187e565b61028290546108b6565b805460009392916113e16113dd836108b6565b9390565b916001811690811561143257506001146113fa57505050565b61140d9192939450600052602060002090565b6000905b83821061141e5750500190565b600181602092548486015201910190611411565b60ff191683525050811515909102019150565b61042b61145d92602092611457815190565b94859290565b938491016103d4565b916001611478600594611486946113ca565b602f60f81b81520190611445565b64173539b7b760d91b81520190565b6114b5929161026c916114a760405190565b948592602084019283611466565b9081038252038361057d565b6114ca8161163c565b506114d560126113c0565b6114e66114e26000610359565b9190565b11156114ff576114f8610282916119e0565b6012611495565b50610282610f89565b610b0361028291611517600090565b506010610ac3565b61152b906010926113ca565b6f17b1b7b63632b1ba34b7b7173539b7b760811b81520190565b9061026c61155260405190565b80936114b560208301918261151f565b61156c60126113c0565b6115796114e26000610359565b1115611589576102826012611545565b610282610f89565b610282916115ac6115b1926115a4600090565b506005610e3a565b610e3a565b5460ff1690565b61026c906115c46116c2565b60006115cf81610d53565b6115d8816102cf565b6115e1846102cf565b146115f157505061026c906116ff565b631e4fbdf760e01b82528190610df590600483016102fb565b61026c906115b8565b63780e9d6360e01b6001600160e01b0319821614908115611632575090565b6102829150611a73565b61164581611abe565b90600090611655610f1083610d53565b61165e846102cf565b1461166857505090565b637e27328960e01b82526004820152602490fd5b6116936102829161168b600090565b506004610366565b610e9a565b9160019161026c93611ad5565b610282929190611c01565b90808210156116bd575090565b905090565b6116ca61138a565b33906116de6116d8836102cf565b916102cf565b036116e65750565b63118cdaa760e01b600090815290610e8c9060046102fb565b61172561171f61170f600a610e9a565b61171a84600a610f3e565b610e31565b91610e31565b907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e061175060405190565b80805b0390a3565b9060ff90610f34565b90611771610282610f5592151590565b8254611758565b6000611786610f1082610d53565b61178f846102cf565b146117e857506117536117de6117d88361171a876117d3886115ac7f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31996005610e3a565b611761565b93610e31565b936102a860405190565b630b61174360e31b815280610df584600483016102fb565b9050519061026c82610247565b9060208282031261025a5761028291611800565b90926118529061184b6102829694611841608086019760008701906102f2565b60208501906102f2565b6040830152565b60608184039101526103f7565b3d156118795761186e3d610f6d565b903d6000602084013e565b606090565b6000939192833b6118916114e287610359565b1161189e575b5050505050565b6020916118ad61171a86610e31565b9086336118d66118bc60405190565b97889687958694630a85bd0160e11b865260048601611821565b03925af160009181611974575b5061193557506118f8565b3880808080611897565b61190061185f565b805161190e6114e285610359565b0361192d5750633250574960e11b82528190610df590600483016102fb565b805190602001fd5b61194f630a85bd0160e11b5b916001600160e01b03191690565b0361195b5750506118ee565b633250574960e11b82528190610df590600483016102fb565b61199791925060203d60201161199e575b61198f818361057d565b81019061180d565b90386118e3565b503d611985565b9061026c61125b6119b584610f6d565b936105b8565b634e487b7160e01b600052601260045260246000fd5b81156119db570490565b6119bb565b6119e981611c9a565b906119fa60019261042b6001610359565b9180611a05846119a5565b936020018401905b611a18575b50505090565b8115611a6e57611a529060001901926f181899199a1a9b1b9c1cb0b131b232b360811b600a82061a8453611a4c600a610359565b906119d1565b9081611a616114e26000610359565b14611a6e57909181611a0d565b611a12565b6380ac58cd60e01b6001600160e01b0319821614908115611aa3575b8115611a99575090565b6102829150611e3c565b6001600160e01b03198116635b5e139f60e01b149150611a8f565b61169361028291611acd600090565b506002610366565b92919091808115611be3575b611afc575b505090611af761026c926004610366565b610f3e565b611b058361163c565b91600090611b15610f1083610d53565b611b1e826102cf565b141580611bc9575b80611bb2575b611b9957505091611af79161026c9493611b49575b509192611ae6565b611b5290610e31565b611b5b84610e31565b611b6483610359565b917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925611b8f60405190565b600090a438611b41565b63a9fbf51f60e01b82528190610df590600483016102fb565b50611bc4611bc08286611591565b1590565b611b2c565b50611bd3816102cf565b611bdc856102cf565b1415611b26565b50611bf1610f106000610d53565b611bfa836102cf565b1415611ae1565b9091611c0e908383611e71565b91611c3c611c1c6000610d53565b611c25816102cf565b611c2e866102cf565b03611c7957610f108361205e565b611c45836102cf565b03611c545761028291506120fd565b611c5d826102cf565b611c66846102cf565b03611c7057505090565b61028291612080565b611c82846102cf565b611c8b866102cf565b146102cf57610f108386611fa5565b611ca46000610359565b907a184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000611cca81610359565b821015611e1a575b506d04ee2d6d415b85acef8100000000611ceb81610359565b821015611df8575b50662386f26fc10000611d0581610359565b821015611dd6575b506305f5e100611d1c81610359565b821015611db4575b50612710611d3181610359565b821015611d92575b50611d446064610359565b811015611d70575b611d596114e2600a610359565b1015611d625790565b6102829061042b6001610359565b611d81611d8c91611a4c6064610359565b9161042b6002610359565b90611d4c565b611dad91611a4c611da292610359565b9161042b6004610359565b9038611d39565b611dcf91611a4c611dc492610359565b9161042b6008610359565b9038611d24565b611df191611a4c611de692610359565b9161042b6010610359565b9038611d0d565b611e1391611a4c611e0892610359565b9161042b6020610359565b9038611cf3565b611e3591611a4c611e2a92610359565b9161042b6040610359565b9038611cd2565b611e4c6301ffc9a760e01b611941565b1490565b9060001990610f34565b90611e6a610282610f5592610359565b8254611e50565b90611ec4611e7e82611abe565b936000611e8a81610d53565b9184611e95846102cf565b611e9e836102cf565b03611f94575b5050611eaf826102cf565b611eb8876102cf565b03611f59575b506102cf565b611ecd836102cf565b03611f29575b611ee282611af7836002610366565b611ef7611ef16117d885610e31565b91610359565b917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef611f2260405190565b600090a490565b611f54611f366001610359565b611f4e611f44856003610e3a565b9161042b83610c50565b90611e5a565b611ed3565b611f6590828581611ad5565b611f8e611f726001610359565b611f4e611f80886003610e3a565b91611f8a83610c50565b0390565b38611ebe565b611f9e9188612150565b3884611ea4565b611fe461026c92610e69600093611fe985611fe4611fc28461131a565b95600785611fd3610e6e8484610366565b89808203611ff0575b505050610366565b611031565b6006610e3a565b610e696120228461201d85612013610e6e61201d97610e696120289b6006610e3a565b9485936006610e3a565b611e5a565b84610366565b853889611fdc565b908154916801000000000000000083101561059f578261205891600161026c95018155610ac3565b90611018565b61026c9061207961206e60085490565b61201d836009610366565b6008612030565b61201d826120b861026c9461201d610e69956120ae61209e8261131a565b6120a86001610359565b9061120e565b9687916006610e3a565b6007610366565b634e487b7160e01b600052603160045260246000fd5b805480156120f85760001901906120f56120ef8383610ac3565b90611031565b55565b6120bf565b61214b61026c916102826000611fe460089361211a61209e865490565b610e6960099161201d61213d610b03612136610e6e8888610366565b938b610ac3565b61202281612058858d610ac3565b6120d5565b9061215f611bc08483856121b0565b61216857505050565b600092839261217c6116d8610f1086610d53565b0361219957637e27328960e01b8352600483015250602481010390fd5b63177e802f60e01b8352610df59160048401610e12565b906121be610f106000610d53565b6121c7826102cf565b141592836121d55750505090565b909192506121e2826102cf565b6121eb846102cf565b14928315612226575b508215612206575b5050388080611a12565b61221e9192506122186116d89161167c565b926102cf565b1438806121fc565b6122339193508290611591565b91386121f456fea26469706673582212207d4791cacd315f39a82251ad02d6d18b78b0a33b8b8f2cbdcc08367ac5cea66564736f6c634300081c0033";

type BaseNFTConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BaseNFTConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BaseNFT__factory extends ContractFactory {
  constructor(...args: BaseNFTConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _name: string,
    _symbol: string,
    _initialPrice: BigNumberish,
    _maxSupply: BigNumberish,
    _creatorFeePercent: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      _name,
      _symbol,
      _initialPrice,
      _maxSupply,
      _creatorFeePercent,
      overrides || {}
    );
  }
  override deploy(
    _name: string,
    _symbol: string,
    _initialPrice: BigNumberish,
    _maxSupply: BigNumberish,
    _creatorFeePercent: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      _name,
      _symbol,
      _initialPrice,
      _maxSupply,
      _creatorFeePercent,
      overrides || {}
    ) as Promise<
      BaseNFT & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): BaseNFT__factory {
    return super.connect(runner) as BaseNFT__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BaseNFTInterface {
    return new Interface(_abi) as BaseNFTInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): BaseNFT {
    return new Contract(address, _abi, runner) as unknown as BaseNFT;
  }
}
