/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type { BaseNFT, BaseNFTInterface } from "../../../src/core/BaseNFT";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_initialPrice",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_maxSupply",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_creatorFeePercent",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ERC721EnumerableForbiddenBatchMint",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "ERC721IncorrectOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ERC721InsufficientApproval",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "approver",
        type: "address",
      },
    ],
    name: "ERC721InvalidApprover",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "ERC721InvalidOperator",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "ERC721InvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "ERC721InvalidReceiver",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "ERC721InvalidSender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ERC721NonexistentToken",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "ERC721OutOfBoundsIndex",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "availableTokens",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "baseURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "creator",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "creatorFeePercent",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "currentSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "description",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getAllAvailableTokens",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "getAvailableTokenByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getAvailableTokensCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "start",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "limit",
        type: "uint256",
      },
    ],
    name: "getAvailableTokensPaginated",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "initialPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC721Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_baseURI",
        type: "string",
      },
    ],
    name: "setBaseURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_creator",
        type: "address",
      },
    ],
    name: "setCreator",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_description",
        type: "string",
      },
    ],
    name: "setDescription",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "tokenByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "tokenIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "tokenOfOwnerByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523461002e5761001d610014610171565b93929092610196565b604051611eb261054e8239611eb290f35b600080fd5b634e487b7160e01b600052604160045260246000fd5b90601f01601f191681019081106001600160401b0382111761006a57604052565b610033565b9061008361007c60405190565b9283610049565b565b6001600160401b03811161006a57602090601f01601f19160190565b60005b8381106100b45750506000910152565b81810151838201526020016100a4565b909291926100d96100d482610085565b61006f565b938185528183011161002e576100839160208501906100a1565b9080601f8301121561002e57815161010d926020016100c4565b90565b919060a08382031261002e5782516001600160401b03811161002e57816101389185016100f3565b60208401519093906001600160401b03811161002e578261015a9183016100f3565b604082015160608301516080909301519194909350565b61018f612400803803806101848161006f565b928339810190610110565b9091929394565b91909293610083943392610235565b90600019905b9181191691161790565b61010d61010d61010d9290565b906101d261010d6101d9926101b5565b82546101a5565b9055565b906001600160a01b03906101ab565b61010d90610200906001600160a01b031682565b6001600160a01b031690565b61010d906101ec565b61010d9061020c565b9061022e61010d6101d992610215565b82546101dd565b61024b610260966102529394966102599661026b565b600b6101c2565b600c6101c2565b600d6101c2565b61008333600e61021e565b9061008392916102a9565b61020061010d61010d9290565b61010d90610276565b61029590610200565b9052565b602081019291610083919061028c565b916102b3916102fd565b60006102be81610283565b6102c781610200565b6102d084610200565b146102e0575050610083906104f6565b631e4fbdf760e01b825281906102f99060048301610299565b0390fd5b610083918291829182916104cd565b634e487b7160e01b600052602260045260246000fd5b9060016002830492168015610342575b602083101461033d57565b61030c565b91607f1691610332565b9160001960089290920291821b911b6101ab565b919061037161010d6101d9936101b5565b90835461034c565b61008391600091610360565b818110610390575050565b8061039e6000600193610379565b01610385565b9190601f81116103b357505050565b6103c561008393600052602060002090565b906020601f8401819004830193106103e7575b6020601f909101040190610385565b90915081906103d8565b906103fa815190565b906001600160401b03821161006a5761041d826104178554610322565b856103a4565b602090601f8311600114610458576101d992916000918361044d575b5050600019600883021c1916906002021790565b015190503880610439565b601f1983169161046d85600052602060002090565b9260005b8181106104ab57509160029391856001969410610492575b50505002019055565b01516000196008601f8516021c19169055388080610489565b91936020600181928787015181550195019201610471565b90610083916103f1565b906104dc6100839260006104c3565b60016104c3565b61010d90610200565b61010d90546104e3565b61051c610516610506600a6104ec565b61051184600a61021e565b610215565b91610215565b907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e061054760405190565b600090a356fe6080604052600436101561001257600080fd5b60003560e01c806301ffc9a71461025257806302d05d3f1461024d5780630583e9f81461024857806306fdde0314610243578063081812fc1461023e578063095ea7b31461023957806312ea5c7e14610234578063150b7a021461022f57806318160ddd1461022a5780631d0806ae1461022557806323b872dd146102205780632dcd52f21461021b5780632f745c59146102165780633f5160181461021157806342842e0e1461020c5780634f6ccce71461020757806353613dd31461020257806355f804b3146101fd5780635eba096b146101f85780636352211e146101f35780636c0360eb146101ee57806370a08231146101e9578063715018a6146101e45780637284e416146101df578063771282f6146101da5780638da5cb5b146101d557806390c3f38f146101d057806395d89b41146101cb578063a22cb465146101c6578063ad64d068146101c1578063b88d4fde146101bc578063c87b56dd146101b7578063cf6a68bf146101b2578063d5abeb01146101ad578063e985e9c5146101a85763f2fde38b0361026a57610c2b565b610c0f565b610bd1565b610baa565b610b8f565b610b73565b610b58565b610ae3565b610a90565b610a78565b610a5d565b610a42565b610a1b565b6109f7565b6109dc565b6109c1565b61087f565b610863565b61082f565b6107ee565b6107c7565b6107ae565b610796565b610766565b61074a565b610731565b6106ed565b6106c5565b61068b565b610550565b6104cb565b610477565b610450565b6103b9565b61031b565b610299565b6001600160e01b031981165b0361026a57565b600080fd5b9050359061027c82610257565b565b9060208282031261026a576102929161026f565b90565b9052565b3461026a576102c76102b46102af36600461027e565b610c43565b6040515b91829182901515815260200190565b0390f35b600091031261026a57565b610292916008021c5b6001600160a01b031690565b9061029291546102d6565b6102926000600e6102eb565b610295906102df565b60208101929161027c9190610302565b3461026a5761032b3660046102cb565b6102c76103366102f6565b6040519182918261030b565b80610263565b9050359061027c82610342565b9060208282031261026a5761029291610348565b6102926102926102929290565b9061038090610369565b600052602052604060002090565b610292916008021c81565b90610292915461038e565b60006103b4610292926011610376565b610399565b3461026a576102c76103d46103cf366004610355565b6103a4565b6040519182918290815260200190565b60005b8381106103f75750506000910152565b81810151838201526020016103e7565b61042861043160209361043b9361041c815190565b80835293849260200190565b958691016103e4565b601f01601f191690565b0190565b602080825261029292910190610407565b3461026a576104603660046102cb565b6102c761046b610c55565b6040519182918261043f565b3461026a576102c761033661048d366004610355565b610c5f565b610263816102df565b9050359061027c82610492565b919060408382031261026a576102929060206104c4828661049b565b9401610348565b3461026a576104e46104de3660046104a8565b90610c72565b604051005b906105096105026104f8845190565b8084529260200190565b9260200190565b9060005b81811061051a5750505090565b9091926105376105306001928651815260200190565b9460200190565b92910161050d565b6020808252610292929101906104e9565b3461026a576105603660046102cb565b6102c761056b610d13565b6040519182918261053f565b634e487b7160e01b600052604160045260246000fd5b90601f01601f1916810190811067ffffffffffffffff8211176105af57604052565b610577565b9061027c6105c160405190565b928361058d565b67ffffffffffffffff81116105af57602090601f01601f19160190565b90826000939282370152565b90929192610606610601826105c8565b6105b4565b938185528183011161026a5761027c9160208501906105e5565b9080601f8301121561026a57816020610292933591016105f1565b9060808282031261026a57610650818361049b565b9261065e826020850161049b565b9261066c8360408301610348565b92606082013567ffffffffffffffff811161026a576102929201610620565b3461026a576102c76106aa6106a136600461063b565b92919091610d60565b604051918291826001600160e01b0319909116815260200190565b3461026a576106d53660046102cb565b6102c76103d460085490565b6102926000600b610399565b3461026a576106fd3660046102cb565b6102c76103d46106e1565b909160608284031261026a57610292610721848461049b565b9360406104c4826020870161049b565b3461026a576104e4610744366004610708565b91610dbe565b3461026a5761075a3660046102cb565b6102c76103d460105490565b3461026a576102c76103d461077c3660046104a8565b90610e78565b9060208282031261026a576102929161049b565b3461026a576104e46107a9366004610782565b610f98565b3461026a576104e46107c1366004610708565b91610fc5565b3461026a576102c76103d46107dd366004610355565b610fd9565b6102926000600d610399565b3461026a576107fe3660046102cb565b6102c76103d46107e2565b9060208282031261026a57813567ffffffffffffffff811161026a576102929201610620565b3461026a576104e4610842366004610809565b6111c5565b919060408382031261026a576102929060206104c48286610348565b3461026a576102c761056b610879366004610847565b906112b6565b3461026a576102c7610336610895366004610355565b611345565b634e487b7160e01b600052600060045260246000fd5b634e487b7160e01b600052602260045260246000fd5b90600160028304921680156108e6575b60208310146108e157565b6108b0565b91607f16916108d6565b8054600093929161090d610903836108c6565b8085529360200190565b916001811690811561095f575060011461092657505050565b6109399192939450600052602060002090565b916000925b81841061094b5750500190565b80548484015260209093019260010161093e565b92949550505060ff1916825215156020020190565b90610292916108f0565b9061027c6109989261098f60405190565b93848092610974565b038361058d565b906000106109b0576102929061097e565b61089a565b6102926000601261099f565b3461026a576109d13660046102cb565b6102c761046b6109b5565b3461026a576102c76103d46109f2366004610782565b61134e565b3461026a57610a073660046102cb565b6104e46113b6565b6102926000601361099f565b3461026a57610a2b3660046102cb565b6102c761046b610a0f565b6102926000600f610399565b3461026a57610a523660046102cb565b6102c76103d4610a36565b3461026a57610a6d3660046102cb565b6102c76103366113be565b3461026a576104e4610a8b366004610809565b6113e7565b3461026a57610aa03660046102cb565b6102c761046b6113f0565b801515610263565b9050359061027c82610aab565b919060408382031261026a57610292906020610adc828661049b565b9401610ab3565b3461026a576104e4610af6366004610ac0565b906113fa565b634e487b7160e01b600052603260045260246000fd5b8054821015610b3557610b2c600191600052602060002090565b91020190600090565b610afc565b60105481101561026a57610b52610292916010610b12565b90610399565b3461026a576102c76103d4610b6e366004610355565b610b3a565b3461026a576104e4610b8636600461063b565b92919091611405565b3461026a576102c761046b610ba5366004610355565b61141c565b3461026a576102c76103d4610bc0366004610355565b611427565b6102926000600c610399565b3461026a57610be13660046102cb565b6102c76103d4610bc5565b919060408382031261026a57610292906020610c08828661049b565b940161049b565b3461026a576102c76102b4610c25366004610bec565b9061143e565b3461026a576104e4610c3e366004610782565b6114b7565b610292906114c0565b6102929061097e565b6102926000610c4c565b61029290610c6c816114e9565b50611529565b61027c913391611545565b6102929081565b6102929054610c7d565b90610ca9610c9d6104f8845490565b92600052602060002090565b9060005b818110610cba5750505090565b909192610cde610cd7600192610ccf87610c84565b815260200190565b9460010190565b929101610cad565b9061029291610c8e565b9061027c61099892610d0160405190565b93848092610ce6565b61029290610cf0565b6102926010610d0a565b610292906102df906001600160a01b031682565b61029290610d1d565b610d53610d4d6102929263ffffffff1690565b60e01b90565b6001600160e01b03191690565b50505050610d6c600090565b5061029263150b7a02610d3a565b6102df6102926102929290565b61029290610d7a565b604090610db761027c9496959396610db060608401986000850190610302565b6020830152565b0190610302565b9091600092610dcc84610d87565b610dd5816102df565b610dde836102df565b14610e2d5750610df090823391611552565b91610dfa816102df565b610e03846102df565b03610e0e5750505050565b6364283d7b60e01b84528392610e2992909160048501610d90565b0390fd5b84610e298192633250574960e11b83526004830161030b565b91602061027c929493610e6160408201966000830190610302565b0152565b61029290610d31565b9061038090610e65565b610e846102928261134e565b821015610ea75761029291610e9d610ea2926006610e6e565b610376565b610c84565b63295f44f760e21b600090815291610ec0916004610e46565b036000fd5b610292906102df565b6102929054610ec5565b15610edf57565b60405162461bcd60e51b815260206004820152602360248201527f4f6e6c792063726561746f722063616e2063616c6c20746869732066756e637460448201526234b7b760e91b6064820152608490fd5b61027c90610f58610f49610f44600e610ece565b6102df565b610f52336102df565b14610ed8565b610f8d565b906001600160a01b03905b9181191691161790565b90610f82610292610f8992610e65565b8254610f5d565b9055565b61027c90600e610f72565b61027c90610f30565b90610fae610601836105c8565b918252565b6102926000610fa1565b610292610fb3565b909161027c92610fd3610fbd565b92611405565b610fe561029260085490565b811015610ffa57610b52610292916008610b12565b610e2990600091829161100c83610d87565b63295f44f760e21b845260048401610e46565b61027c90611033610f49610f44600e610ece565b6111ba565b9160001960089290920291821b911b610f68565b919061105d610292610f8993610369565b908354611038565b61027c9160009161104c565b81811061107c575050565b8061108a6000600193611065565b01611071565b9190601f811161109f57505050565b6110b161027c93600052602060002090565b906020601f8401819004830193106110d3575b6020601f909101040190611071565b90915081906110c4565b906110e6815190565b9067ffffffffffffffff82116105af5761110a8261110485546108c6565b85611090565b602090601f831160011461114557610f8992916000918361113a575b5050600019600883021c1916906002021790565b015190503880611126565b601f1983169161115a85600052602060002090565b9260005b8181106111985750916002939185600196941061117f575b50505002019055565b01516000196008601f8516021c19169055388080611176565b9193602060018192878701518155019501920161115e565b9061027c916110dd565b61027c9060126111b0565b61027c9061101f565b156111d557565b60405162461bcd60e51b815260206004820152601960248201527f537461727420696e646578206f7574206f6620626f756e6473000000000000006044820152606490fd5b634e487b7160e01b600052601160045260246000fd5b9190820180921161123d57565b61121a565b9190820391821161123d57565b67ffffffffffffffff81116105af5760208091020190565b90610fae6106018361124f565b369037565b9061027c61128f61128984611267565b9361124f565b601f190160208401611274565b906112a5825190565b811015610b35576020809102010190565b916112e36112db6010936112d56112ce610292875490565b87106111ce565b85611230565b83549061155d565b916112f66112f18585611242565b611279565b91845b845b81101561133c576113358161132f611319610b526112fb9588610b12565b61132c6113268b85611242565b8961129c565b52565b60010190565b90506112f9565b50935050905090565b610292906114e9565b600061135981610d87565b611362816102df565b61136b846102df565b14611380575050610ea2610292916003610e6e565b6322718ad960e21b82528190610e29906004830161030b565b6113a161156f565b61027c61027c6113b16000610d87565b6115ac565b61027c611399565b610292600a610ece565b61027c906113dc610f49610f44600e610ece565b61027c9060136111b0565b61027c906113c8565b6102926001610c4c565b61027c919033611625565b9061027c939291611417838383610dbe565b61172b565b506102926012610c4c565b610b5261029291611436600090565b506010610b12565b6102929161145961145e92611451600090565b506005610e6e565b610e6e565b5460ff1690565b61027c9061147161156f565b600061147c81610d87565b611485816102df565b61148e846102df565b1461149e57505061027c906115ac565b631e4fbdf760e01b82528190610e29906004830161030b565b61027c90611465565b63780e9d6360e01b6001600160e01b03198216149081156114df575090565b6102929150611856565b6114f2816118a1565b90600090611502610f4483610d87565b61150b846102df565b1461151557505090565b637e27328960e01b82526004820152602490fd5b61154061029291611538600090565b506004610376565b610ece565b9160019161027c936118b8565b6102929291906119e4565b908082101561156a575090565b905090565b6115776113be565b339061158b611585836102df565b916102df565b036115935750565b63118cdaa760e01b600090815290610ec090600461030b565b6115d26115cc6115bc600a610ece565b6115c784600a610f72565b610e65565b91610e65565b907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e06115fd60405190565b80805b0390a3565b9060ff90610f68565b9061161e610292610f8992151590565b8254611605565b6000611633610f4482610d87565b61163c846102df565b14611695575061160061168b611685836115c787611680886114597f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31996005610e6e565b61160e565b93610e65565b936102b860405190565b630b61174360e31b815280610e29846004830161030b565b9050519061027c82610257565b9060208282031261026a57610292916116ad565b90926116ff906116f861029296946116ee60808601976000870190610302565b6020850190610302565b6040830152565b6060818403910152610407565b3d156117265761171b3d610fa1565b903d6000602084013e565b606090565b6000939192833b61174261173e87610369565b9190565b1161174f575b5050505050565b60209161175e6115c786610e65565b90863361178761176d60405190565b97889687958694630a85bd0160e11b8652600486016116ce565b03925af160009181611825575b506117e657506117a9565b3880808080611748565b6117b161170c565b80516117bf61173e85610369565b036117de5750633250574960e11b82528190610e29906004830161030b565b805190602001fd5b611800630a85bd0160e11b5b916001600160e01b03191690565b0361180c57505061179f565b633250574960e11b82528190610e29906004830161030b565b61184891925060203d60201161184f575b611840818361058d565b8101906116ba565b9038611794565b503d611836565b6380ac58cd60e01b6001600160e01b0319821614908115611886575b811561187c575090565b6102929150611a7d565b6001600160e01b03198116635b5e139f60e01b149150611872565b611540610292916118b0600090565b506002610376565b929190918081156119c6575b6118df575b5050906118da61027c926004610376565b610f72565b6118e8836114e9565b916000906118f8610f4483610d87565b611901826102df565b1415806119ac575b80611995575b61197c575050916118da9161027c949361192c575b5091926118c9565b61193590610e65565b61193e84610e65565b61194783610369565b917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92561197260405190565b600090a438611924565b63a9fbf51f60e01b82528190610e29906004830161030b565b506119a76119a3828661143e565b1590565b61190f565b506119b6816102df565b6119bf856102df565b1415611909565b506119d4610f446000610d87565b6119dd836102df565b14156118c4565b90916119f1908383611ab2565b91611a1f6119ff6000610d87565b611a08816102df565b611a11866102df565b03611a5c57610f4483611c9f565b611a28836102df565b03611a37576102929150611d3e565b611a40826102df565b611a49846102df565b03611a5357505090565b61029291611cc1565b611a65846102df565b611a6e866102df565b146102df57610f448386611be6565b611a8d6301ffc9a760e01b6117f2565b1490565b9060001990610f68565b90611aab610292610f8992610369565b8254611a91565b90611b05611abf826118a1565b936000611acb81610d87565b9184611ad6846102df565b611adf836102df565b03611bd5575b5050611af0826102df565b611af9876102df565b03611b9a575b506102df565b611b0e836102df565b03611b6a575b611b23826118da836002610376565b611b38611b3261168585610e65565b91610369565b917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef611b6360405190565b600090a490565b611b95611b776001610369565b611b8f611b85856003610e6e565b9161043b83610c84565b90611a9b565b611b14565b611ba6908285816118b8565b611bcf611bb36001610369565b611b8f611bc1886003610e6e565b91611bcb83610c84565b0390565b38611aff565b611bdf9188611d91565b3884611ae5565b611c2561027c92610e9d600093611c2a85611c25611c038461134e565b95600785611c14610ea28484610376565b89808203611c31575b505050610376565b611065565b6006610e6e565b610e9d611c6384611c5e85611c54610ea2611c5e97610e9d611c699b6006610e6e565b9485936006610e6e565b611a9b565b84610376565b853889611c1d565b90815491680100000000000000008310156105af5782611c9991600161027c95018155610b12565b9061104c565b61027c90611cba611caf60085490565b611c5e836009610376565b6008611c71565b611c5e82611cf961027c94611c5e610e9d95611cef611cdf8261134e565b611ce96001610369565b90611242565b9687916006610e6e565b6007610376565b634e487b7160e01b600052603160045260246000fd5b80548015611d39576000190190611d36611d308383610b12565b90611065565b55565b611d00565b611d8c61027c916102926000611c25600893611d5b611cdf865490565b610e9d600991611c5e611d7e610b52611d77610ea28888610376565b938b610b12565b611c6381611c99858d610b12565b611d16565b90611da06119a3848385611df1565b611da957505050565b6000928392611dbd611585610f4486610d87565b03611dda57637e27328960e01b8352600483015250602481010390fd5b63177e802f60e01b8352610e299160048401610e46565b90611dff610f446000610d87565b611e08826102df565b14159283611e17575b50505090565b90919250611e24826102df565b611e2d846102df565b14928315611e68575b508215611e48575b5050388080611e11565b611e60919250611e5a61158591611529565b926102df565b143880611e3e565b611e75919350829061143e565b9138611e3656fea26469706673582212207407b8904818c756ce17e20a9d8895e9620ccb709d9dda04b8a9865db1bdc16964736f6c634300081c0033";

type BaseNFTConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BaseNFTConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BaseNFT__factory extends ContractFactory {
  constructor(...args: BaseNFTConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _name: string,
    _symbol: string,
    _initialPrice: BigNumberish,
    _maxSupply: BigNumberish,
    _creatorFeePercent: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      _name,
      _symbol,
      _initialPrice,
      _maxSupply,
      _creatorFeePercent,
      overrides || {}
    );
  }
  override deploy(
    _name: string,
    _symbol: string,
    _initialPrice: BigNumberish,
    _maxSupply: BigNumberish,
    _creatorFeePercent: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      _name,
      _symbol,
      _initialPrice,
      _maxSupply,
      _creatorFeePercent,
      overrides || {}
    ) as Promise<
      BaseNFT & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): BaseNFT__factory {
    return super.connect(runner) as BaseNFT__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BaseNFTInterface {
    return new Interface(_abi) as BaseNFTInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): BaseNFT {
    return new Contract(address, _abi, runner) as unknown as BaseNFT;
  }
}
